@model JoS.ViewModel.ExternalLoginConfirmationViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutAuthentication.cshtml";
}

<div class="content">
    <h3>Associate your @ViewBag.LoginProvider account.</h3>
    <section id="loginConfirmationForm" style="display: block;">
        @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
        {
            @Html.AntiForgeryToken()
            <form class="register-form">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.DateOfBirthday, "{0:MM/dd/yyyy}", new { @class = "form-control", @placeholder = "MM/DD/YYYY" })
                    @Html.ValidationMessageFor(m => m.DateOfBirthday, "", new { @class = "text-danger" })
                </div>
                <div class="form-actions">
                    @Html.ActionLink("Back", "Login", null, new { @class = "btn green btn-outline" })
                    <button type="submit" id="register-submit-btn" class="btn btn-success uppercase pull-right">Register</button>
                </div>
            </form>
        }
    </section>
</div>